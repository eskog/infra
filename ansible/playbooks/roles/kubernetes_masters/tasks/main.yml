#SPDX-License-Identifier: MIT-0
---
# tasks file for kubernetes_masters
- name: Open required master ports in firewalld
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250/tcp
    - 10259/tcp
    - 10257/tcp
  when: ansible_facts['os_family'] == 'RedHat'

- name: Initialize Kubernetes cluster
  ansible.builtin.command: kubeadm init --pod-network-cidr=172.30.0.0/16
  register: kubeadm_output
  args:
    creates: /etc/kubernetes/admin.conf

- name: Save kubeconfig for root user
  ansible.builtin.copy:
    content: "{{ kubeadm_output.stdout_lines | join('\n') }}"
    dest: /root/kubeadm_init_output.txt
    mode: "0600"

- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Set up kubeconfig for kubectl
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
# notify:
#   - Change kubeconfig permissions

#- name: Install networking plugin (Weave Net)
#  ansible.builtin.command: kubectl apply -f "https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml"
#  become: false

#- name: Install networking plugin
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ cilium_manifest }}"
#  when: inventory_hostname in groups['kubernetes_masters'][0] #only run on the first masternode.

- name: Copy CNI mainifest
  ansible.builtin.copy:
    src: "{{ cilium_manifest }}"
    dest: /tmp/cni_manifest.yml
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
  when: inventory_hostname in groups['kubernetes_masters'][0] #only run on the first masternode.

- name: Install networking plugin
  ansible.builtin.command: kubectl apply -f /tmp/cni_manifest.yml
  become: false
  when: inventory_hostname in groups['kubernetes_masters'][0]

- name: Get join command
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: Set join command
  ansible.builtin.set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"