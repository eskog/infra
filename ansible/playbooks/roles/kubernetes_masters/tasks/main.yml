#SPDX-License-Identifier: MIT-0
---
# tasks file for kubernetes_masters
- name: Open required master ports in firewalld
  ansible.posix.firewalld:
    port: "{{ item }}"
    permanent: true
    state: enabled
    immediate: true
  loop:
    - 6443/tcp
    - 2379-2380/tcp
    - 10250/tcp
    - 10259/tcp
    - 10257/tcp
  when: ansible_facts['os_family'] == 'RedHat'

- name: Initialize Kubernetes cluster
  ansible.builtin.command: kubeadm init --pod-network-cidr=10.244.0.0/16
  register: kubeadm_output
  args:
    creates: /etc/kubernetes/admin.conf

- name: Save kubeconfig for root user
  ansible.builtin.copy:
    content: "{{ kubeadm_output.stdout_lines | join('\n') }}"
    dest: /root/kubeadm_init_output.txt
    mode: "0600"

- name: Ensure .kube directory exists
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.kube
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Set up kubeconfig for kubectl
  ansible.builtin.copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/{{ ansible_user }}/.kube/config
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0600"
# notify:
#   - Change kubeconfig permissions

#- name: Install networking plugin (Weave Net)
#  ansible.builtin.command: kubectl apply -f "https://github.com/coreos/flannel/raw/master/Documentation/kube-flannel.yml"
#  become: false

#- name: Install networking plugin
#  kubernetes.core.k8s:
#    state: present
#    src: "{{ cilium_manifest }}"
#  when: inventory_hostname in groups['kubernetes_masters'][0] #only run on the first masternode.

#- name: Copy CNI mainifest
#  ansible.builtin.copy:
#    src: "{{ cilium_manifest }}"
#    dest: /tmp/cni_manifest.yml
#    owner: "{{ ansible_user }}"
#    group: "{{ ansible_user }}"
#    mode: "0600"
#  when: inventory_hostname in groups['kubernetes_masters'][0] #only run on the first masternode.
#
#- name: Install networking plugin # Manifest generated with: helm template cilium cilium/cilium --namespace kube-system --version 1.18.1 --include-crds --set kubeProxyReplacement=true --set nodePort.enabled=true --set ipam.operator.clusterPoolIPv4PodCIDRList="{172.30.0.0/16}" > /tmp/cilium.yaml
#  ansible.builtin.command: kubectl apply -f /tmp/cni_manifest.yml
#  become: false
#  when: inventory_hostname in groups['kubernetes_masters'][0]

#- name: Ensure Helm repo file exists
#  copy:
#    dest: /etc/yum.repos.d/helm.repo
#    content: |
#      [helm]
#      name=Helm
#      baseurl=https://baltocdn.com/helm/stable/rpm
#      enabled=1
#      gpgcheck=1
#      gpgkey=https://baltocdn.com/helm/signing.asc
#  become: true
#
#- name: Install Helm
#  dnf:
#    name: helm
#    state: present
#  become: true

- name: Download Helm binary
  get_url:
    url: https://get.helm.sh/helm-v3.18.6-linux-amd64.tar.gz
    dest: /tmp/helm-v3.18.6-linux-amd64.tar.gz
    mode: '0644'
  become: true

- name: Extract Helm binary
  unarchive:
    src: /tmp/helm-v3.18.6-linux-amd64.tar.gz
    dest: /tmp
    remote_src: true
  become: true

- name: Move Helm into /usr/local/bin
  copy:
    src: /tmp/linux-amd64/helm
    dest: /usr/local/bin/helm
    mode: '0755'
    remote_src: true
  become: true

- name: Add Cilium Helm repo
  command: /usr/local/bin/helm repo add cilium https://helm.cilium.io/
  args:
    creates: ~/.cache/helm/repository/cilium-index.yaml

- name: Update Helm repos
  command: /usr/local/bin/helm repo update

- name: Generate Cilium manifest with Helm
  command: >
    /usr/local/bin/helm template cilium cilium/cilium
    --namespace kube-system
    --version 1.18.1
    --include-crds
    --set kubeProxyReplacement=true
    --set routingMode=tunnel
    --set enableEncapsulation=true
    --set ipam.mode=cluster-pool
    --set ipam.operator.clusterPoolIPv4PodCIDRList="{10.244.0.0/16}"
    --set enableNodePort=true
    --set nodePort.enabled=true
    --set hostPort.enabled=true
    --set externalIPs.enabled=true
  register: cilium_manifest

- name: Write Cilium manifest to file
  copy:
    dest: /tmp/cilium-1.18.1.yml
    content: "{{ cilium_manifest.stdout }}"
  become: true

- name: Apply Cilium manifest to cluster using kubectl
  command: kubectl apply -f /tmp/cilium-1.18.1.yml --kubeconfig /etc/kubernetes/admin.conf
  become: true


- name: Get join command
  ansible.builtin.shell: kubeadm token create --print-join-command
  register: join_command_raw

- name: Set join command
  ansible.builtin.set_fact:
    join_command: "{{ join_command_raw.stdout_lines[0] }}"